name: ChronoLog easy CI Build, Install, Deploy

on:
  pull_request:
    branches: [ develop ]

jobs:
  ci-check:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull ChronoLog dev image
        run: docker pull enekoiit/chronolog:2.1.0-amd64

      - name: Build, Install, Deploy, and Test ChronoLog
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            --user grc-iit \
            enekoiit/chronolog:2.1.0-amd64 \
            bash -c '
              set -e

              # Set HOME for this shell (sometimes needed when using --user)
              export HOME=/home/grc-iit

              ##################################
              # Step 1: Spack Environment
              ##################################
              echo "[1/6] Sourcing Spack environment"
              source $HOME/spack/share/spack/setup-env.sh

              ##################################
              # Step 2: Build ChronoLog
              ##################################
              echo "[2/6] Building ChronoLog from PR code..."
              mkdir -p /workspace/build
              cd /workspace/build
              cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$HOME/spack/opt/spack -DINSTALL_DIR=$HOME/chronolog-install ..
              make -j$(nproc)

              ##################################
              # Step 3: Install ChronoLog
              ##################################
              echo "[3/6] Installing ChronoLog..."
              make install
              cd /workspace

              ##################################
              # Step 4: Post-Install Verification
              ##################################
              echo "[4/6] Verifying install..."
              if [ -d $HOME/chronolog-install/Release/bin ]; then
                echo "‚úÖ bin directory found!"
                ls -l $HOME/chronolog-install/Release/bin
              else
                echo "‚ùå Install failed ‚Äî bin directory not found"
                exit 1
              fi

              missing=0
              for exe in chronovisor_server chrono_keeper chrono_grapher chrono_player; do
                if [ ! -x $HOME/chronolog-install/Release/bin/$exe ]; then
                  echo "‚ùå $exe is missing or not executable in bin folder!"
                  missing=1
                  continue
                else
                  echo "‚úÖ $exe is present and executable."
                fi
                if ldd $HOME/chronolog-install/Release/bin/$exe | grep "not found"; then
                  echo "‚ùå $exe is missing one or more shared libraries!"
                  missing=1
                else
                  echo "‚úÖ $exe dependencies OK."
                fi
              done

              if [ $missing = 1 ]; then
                echo "‚ùå One or more required binaries failed verification."
                exit 1
              else
                echo "‚úÖ Install successful! All required binaries present, executable, and dependencies resolved."
              fi

              ##################################
              # Step 5: Deploy ChronoLog
              ##################################
              echo "[5/6] Deploying ChronoLog..."
              if [ -x /workspace/deploy/local_single_user_deploy.sh ]; then
                cd /workspace/deploy
                ./local_single_user_deploy.sh -d -k 5 -r 3 -w $HOME/chronolog-install/Release/
                cd /workspace
              else
                echo "‚ùå Deploy script not found or not executable"
                exit 1
              fi

              ##################################
              # Step 6: Check Deployment
              ##################################
              echo "[6/6] Checking deployment..."
              sleep 5
              echo "üì¶ Listing ChronoLog processes..."
              pgrep -la chrono > /tmp/chrono_processes.txt || true
              cat /tmp/chrono_processes.txt

              echo "üîç Checking required components..."
              for proc in chronovisor_server chrono_grapher chrono_player chrono_keeper; do
                count=$(grep -c "$proc" /tmp/chrono_processes.txt || true)
                case $proc in
                  chronovisor_server)
                    expected=1
                    ;;
                  chrono_grapher|chrono_player)
                    expected=3
                    ;;
                  chrono_keeper)
                    expected=5
                    ;;
                esac
                if [ "$count" -eq "$expected" ]; then
                  echo "‚úÖ Found $count $proc (expected $expected)"
                else
                  echo "‚ùå Missing or wrong count: $proc (found $count, expected $expected)"
                  missing=1
                fi
              done

              if [ "$missing" != "1" ]; then
                echo "‚úÖ All ChronoLog components are running."
              else
                echo "‚ùå Deployment incomplete ‚Äî some components are not running or wrong count."
                echo "==== Dumping monitor logs ===="
                if [ -d $HOME/chronolog-install/Release/monitor ]; then
                  for log in $HOME/chronolog-install/Release/monitor/*; do
                    echo "==== $log ===="
                    cat "$log"
                  done
                else
                  echo "No monitor logs found!"
                fi
                exit 1
              fi
            '